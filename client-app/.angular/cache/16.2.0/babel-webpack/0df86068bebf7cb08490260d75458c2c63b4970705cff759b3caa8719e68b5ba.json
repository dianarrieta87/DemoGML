{"ast":null,"code":"var _class;\nimport { Client } from '../client-main/client';\nimport swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"../client-main/client.service\";\nimport * as i3 from \"@angular/forms\";\nexport class ClientFormComponent {\n  constructor(modal, clientService) {\n    this.modal = modal;\n    this.clientService = clientService;\n    //@Input()\n    this.client = new Client();\n  }\n  saveClient() {\n    this.clientService.create(this.client).subscribe(cliente => {\n      swal('New Client', `The client ${cliente.sharedKey} has been created successfully`, 'success');\n      this.modal.close();\n    }, err => {\n      console.error('error saving the client: ' + err.status, err);\n    });\n  }\n}\n_class = ClientFormComponent;\n_class.ɵfac = function ClientFormComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.NgbActiveModal), i0.ɵɵdirectiveInject(i2.ClientService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-client-form\"]],\n  decls: 34,\n  vars: 4,\n  consts: [[1, \"modal-header\"], [1, \"modal-title\"], [1, \"modal-body\"], [1, \"form-group\", \"row\"], [\"for\", \"sharedKey\", 1, \"col-sm-3\", \"col-form-label\"], [1, \"col-sm-9\"], [\"type\", \"text\", \"id\", \"sharedKey\", \"placeholder\", \"Shared Key\", \"name\", \"sharedKey\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"sharedKey\", \"ngModel\"], [1, \"invalid-feedback\"], [\"for\", \"name\", 1, \"col-sm-3\", \"col-form-label\"], [\"type\", \"text\", \"id\", \"name\", \"placeholder\", \"Name\", \"name\", \"businessId\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"businessId\", \"ngModel\"], [\"for\", \"email\", 1, \"col-sm-3\", \"col-form-label\"], [\"type\", \"email\", \"id\", \"email\", \"placeholder\", \"Email\", \"name\", \"email\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"email\", \"ngModel\"], [\"for\", \"phone\", 1, \"col-sm-3\", \"col-form-label\"], [\"type\", \"tel\", \"id\", \"phone\", \"placeholder\", \"Phone\", \"name\", \"phone\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"phone\", \"ngModel\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"click\"]],\n  template: function ClientFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h4\", 1);\n      i0.ɵɵtext(2, \"Create new client\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\")(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Shared Key\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"input\", 6, 7);\n      i0.ɵɵlistener(\"ngModelChange\", function ClientFormComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.client.sharedKey = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 8);\n      i0.ɵɵtext(12, \"Shared Key is required\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"div\", 3)(14, \"label\", 9);\n      i0.ɵɵtext(15, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 5)(17, \"input\", 10, 11);\n      i0.ɵɵlistener(\"ngModelChange\", function ClientFormComponent_Template_input_ngModelChange_17_listener($event) {\n        return ctx.client.businessId = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(19, \"div\", 3)(20, \"label\", 12);\n      i0.ɵɵtext(21, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 5)(23, \"input\", 13, 14);\n      i0.ɵɵlistener(\"ngModelChange\", function ClientFormComponent_Template_input_ngModelChange_23_listener($event) {\n        return ctx.client.email = $event;\n      });\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(25, \"div\", 3)(26, \"label\", 15);\n      i0.ɵɵtext(27, \"Phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"div\", 5)(29, \"input\", 16, 17);\n      i0.ɵɵlistener(\"ngModelChange\", function ClientFormComponent_Template_input_ngModelChange_29_listener($event) {\n        return ctx.client.phone = $event;\n      });\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(31, \"div\", 18)(32, \"button\", 19);\n      i0.ɵɵlistener(\"click\", function ClientFormComponent_Template_button_click_32_listener() {\n        return ctx.saveClient();\n      });\n      i0.ɵɵtext(33, \"OK\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngModel\", ctx.client.sharedKey);\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"ngModel\", ctx.client.businessId);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.client.email);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.client.phone);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Client","swal","ClientFormComponent","constructor","modal","clientService","client","saveClient","create","subscribe","cliente","sharedKey","close","err","console","error","status","i0","ɵɵdirectiveInject","i1","NgbActiveModal","i2","ClientService","selectors","decls","vars","consts","template","ClientFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ClientFormComponent_Template_input_ngModelChange_9_listener","$event","ClientFormComponent_Template_input_ngModelChange_17_listener","businessId","ClientFormComponent_Template_input_ngModelChange_23_listener","email","ClientFormComponent_Template_input_ngModelChange_29_listener","phone","ClientFormComponent_Template_button_click_32_listener","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\adminDiana\\Documents\\proyectos\\DemoGML\\client-app\\src\\app\\client-form\\client-form.component.ts","C:\\Users\\adminDiana\\Documents\\proyectos\\DemoGML\\client-app\\src\\app\\client-form\\client-form.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Client } from '../client-main/client';\nimport { ClientService } from '../client-main/client.service';\nimport swal from 'sweetalert2';\n\n@Component({\n  selector: 'app-client-form',\n  templateUrl: './client-form.component.html',\n  styleUrls: ['./client-form.component.css']\n})\nexport class ClientFormComponent {\n\n  //@Input()\n  client: Client = new Client;\n\n  constructor(public modal: NgbActiveModal, \n    private clientService: ClientService) { }\n\n  saveClient() {\n    this.clientService.create(this.client)\n      .subscribe(\n        cliente => {\n          swal('New Client', `The client ${cliente.sharedKey} has been created successfully`, 'success');\n          this.modal.close();\n        },\n        err => {\n          console.error('error saving the client: ' + err.status, err);\n        }\n      );\n  }\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title\">Create new client</h4>\n</div>\n<div class=\"modal-body\">\n    <form>\n        <div class=\"form-group row\">\n            <label for=\"sharedKey\" class=\"col-sm-3 col-form-label\">Shared Key</label>\n            <div class=\"col-sm-9\">\n                <input type=\"text\" class=\"form-control\" id=\"sharedKey\" [(ngModel)]=\"client.sharedKey\" placeholder=\"Shared Key\"  name=\"sharedKey\" #sharedKey=\"ngModel\">\n                <div class=\"invalid-feedback\">Shared Key is required</div>\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <label for=\"name\" class=\"col-sm-3 col-form-label\">Name</label>\n            <div class=\"col-sm-9\">\n                <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Name\" [(ngModel)]=\"client.businessId\" name=\"businessId\" #businessId=\"ngModel\">\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <label for=\"email\" class=\"col-sm-3 col-form-label\">Email</label>\n            <div class=\"col-sm-9\">\n                <input type=\"email\" class=\"form-control\" id=\"email\" [(ngModel)]=\"client.email\" placeholder=\"Email\"  name=\"email\" #email=\"ngModel\" >\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <label for=\"phone\" class=\"col-sm-3 col-form-label\">Phone</label>\n            <div class=\"col-sm-9\">\n                <input type=\"tel\" class=\"form-control\" id=\"phone\" placeholder=\"Phone\"[(ngModel)]=\"client.phone\" name=\"phone\" #phone=\"ngModel\">\n            </div>\n        </div>\n    </form>\n</div>\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"saveClient()\">OK</button>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}