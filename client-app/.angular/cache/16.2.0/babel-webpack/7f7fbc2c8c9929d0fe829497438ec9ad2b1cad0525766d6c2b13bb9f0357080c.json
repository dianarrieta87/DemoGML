{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./client.service\";\nexport class ClientMainComponent {\n  constructor(clientService) {\n    this.clientService = clientService;\n    this.clients = [];\n  }\n  ngOnInit() {\n    this.clientService.getClients().subscribe(data => {\n      this.clients = data;\n    }, error => {\n      console.error('Error fetching clients:', error);\n    });\n  }\n}\n_class = ClientMainComponent;\n_class.ɵfac = function ClientMainComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.ClientService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-client-main\"]],\n  decls: 26,\n  vars: 0,\n  consts: [[1, \"table\", \"table-bordered\"], [\"scope\", \"col\"], [1, \"table-striped\"], [\"scope\", \"row\"]],\n  template: function ClientMainComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h3\");\n      i0.ɵɵtext(1, \"Clients\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"table\", 0)(3, \"thead\")(4, \"tr\")(5, \"th\", 1);\n      i0.ɵɵtext(6, \"Shared Key\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"th\", 1);\n      i0.ɵɵtext(8, \"Business ID\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"th\", 1);\n      i0.ɵɵtext(10, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"th\", 1);\n      i0.ɵɵtext(12, \"Phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"th\", 1);\n      i0.ɵɵtext(14, \"Data added\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"th\", 1);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"tbody\", 2)(17, \"tr\");\n      i0.ɵɵelement(18, \"th\", 3);\n      i0.ɵɵelementStart(19, \"td\");\n      i0.ɵɵtext(20, \"d\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"td\");\n      i0.ɵɵtext(22, \"f\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(23, \"td\")(24, \"td\")(25, \"td\");\n      i0.ɵɵelementEnd()()();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["ClientMainComponent","constructor","clientService","clients","ngOnInit","getClients","subscribe","data","error","console","i0","ɵɵdirectiveInject","i1","ClientService","selectors","decls","vars","consts","template","ClientMainComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["C:\\Users\\adminDiana\\Documents\\proyectos\\DemoGML\\client-app\\src\\app\\client-main\\client-main.component.ts","C:\\Users\\adminDiana\\Documents\\proyectos\\DemoGML\\client-app\\src\\app\\client-main\\client-main.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ClientService } from './client.service';\n\n@Component({\n  selector: 'app-client-main',\n  templateUrl: './client-main.component.html',\n  styleUrls: ['./client-main.component.css']\n})\nexport class ClientMainComponent implements OnInit {\n  clients: any[] = [];\n\n  constructor(private clientService: ClientService) { }\n\n  ngOnInit(): void {\n    this.clientService.getClients().subscribe(\n      (data) => {\n        this.clients = data;\n      },\n      (error) => {\n        console.error('Error fetching clients:', error);\n      }\n    );\n  }\n}\n","<h3>Clients</h3>\n\n<table class=\"table table-bordered\">\n    <thead>\n      <tr>\n        <th scope=\"col\">Shared Key</th>\n        <th scope=\"col\">Business ID</th>\n        <th scope=\"col\">Email</th>\n        <th scope=\"col\">Phone</th>\n        <th scope=\"col\">Data added</th>\n        <th scope=\"col\"></th>\n      </tr>\n    </thead>\n    <tbody class=\"table-striped\">\n      <tr>\n        <th scope=\"row\"></th>\n        <td>d</td>\n        <td>f</td>\n        <td></td>\n        <td></td>\n        <td></td>\n      </tr>\n    </tbody>\n</table>"],"mappings":";;;AAQA,OAAM,MAAOA,mBAAmB;EAG9BC,YAAoBC,aAA4B;IAA5B,KAAAA,aAAa,GAAbA,aAAa;IAFjC,KAAAC,OAAO,GAAU,EAAE;EAEiC;EAEpDC,QAAQA,CAAA;IACN,IAAI,CAACF,aAAa,CAACG,UAAU,EAAE,CAACC,SAAS,CACtCC,IAAI,IAAI;MACP,IAAI,CAACJ,OAAO,GAAGI,IAAI;IACrB,CAAC,EACAC,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CACF;EACH;;SAdWR,mBAAmB;;mBAAnBA,MAAmB,EAAAU,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,aAAA;AAAA;;QAAnBb,MAAmB;EAAAc,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCRhCV,EAAA,CAAAY,cAAA,SAAI;MAAAZ,EAAA,CAAAa,MAAA,cAAO;MAAAb,EAAA,CAAAc,YAAA,EAAK;MAEhBd,EAAA,CAAAY,cAAA,eAAoC;MAGZZ,EAAA,CAAAa,MAAA,iBAAU;MAAAb,EAAA,CAAAc,YAAA,EAAK;MAC/Bd,EAAA,CAAAY,cAAA,YAAgB;MAAAZ,EAAA,CAAAa,MAAA,kBAAW;MAAAb,EAAA,CAAAc,YAAA,EAAK;MAChCd,EAAA,CAAAY,cAAA,YAAgB;MAAAZ,EAAA,CAAAa,MAAA,aAAK;MAAAb,EAAA,CAAAc,YAAA,EAAK;MAC1Bd,EAAA,CAAAY,cAAA,aAAgB;MAAAZ,EAAA,CAAAa,MAAA,aAAK;MAAAb,EAAA,CAAAc,YAAA,EAAK;MAC1Bd,EAAA,CAAAY,cAAA,aAAgB;MAAAZ,EAAA,CAAAa,MAAA,kBAAU;MAAAb,EAAA,CAAAc,YAAA,EAAK;MAC/Bd,EAAA,CAAAe,SAAA,aAAqB;MACvBf,EAAA,CAAAc,YAAA,EAAK;MAEPd,EAAA,CAAAY,cAAA,gBAA6B;MAEzBZ,EAAA,CAAAe,SAAA,aAAqB;MACrBf,EAAA,CAAAY,cAAA,UAAI;MAAAZ,EAAA,CAAAa,MAAA,SAAC;MAAAb,EAAA,CAAAc,YAAA,EAAK;MACVd,EAAA,CAAAY,cAAA,UAAI;MAAAZ,EAAA,CAAAa,MAAA,SAAC;MAAAb,EAAA,CAAAc,YAAA,EAAK;MACVd,EAAA,CAAAe,SAAA,UAAS;MAGXf,EAAA,CAAAc,YAAA,EAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}