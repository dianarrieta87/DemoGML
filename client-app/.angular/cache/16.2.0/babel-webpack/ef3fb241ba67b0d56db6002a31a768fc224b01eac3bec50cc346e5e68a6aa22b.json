{"ast":null,"code":"var _class;\nimport { Client } from '../client-main/client';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i2 from \"../client-main/client.service\";\nimport * as i3 from \"@angular/router\";\nexport class ClientFormComponent {\n  constructor(modal, clientService, router) {\n    this.modal = modal;\n    this.clientService = clientService;\n    this.router = router;\n    this.client = new Client();\n  }\n  saveClient() {\n    this.clientService.create(this.client).subscribe(cliente => {\n      this.router.navigate(['/clientes']);\n      swal('Nuevo cliente', `El cliente ${cliente.nombre} ha sido creado con éxito`, 'success');\n    }, err => {\n      this.errores = err.error.errors;\n      console.error('Código del error desde el backend: ' + err.status);\n      console.error(err.error.errors);\n    });\n    // Si todo está correcto, puedes cerrar el modal y enviar los datos al backend\n    this.modal.close( /* datos del nuevo cliente */);\n  }\n}\n_class = ClientFormComponent;\n_class.ɵfac = function ClientFormComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.NgbActiveModal), i0.ɵɵdirectiveInject(i2.ClientService), i0.ɵɵdirectiveInject(i3.Router));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-client-form\"]],\n  inputs: {\n    client: \"client\"\n  },\n  decls: 30,\n  vars: 0,\n  consts: [[1, \"modal-header\"], [1, \"modal-title\"], [1, \"modal-body\"], [1, \"form-group\", \"row\"], [\"for\", \"sharedKey\", 1, \"col-sm-3\", \"col-form-label\"], [1, \"col-sm-9\"], [\"type\", \"text\", \"id\", \"sharedKey\", \"placeholder\", \"Shared Key\", 1, \"form-control\"], [1, \"invalid-feedback\"], [\"for\", \"name\", 1, \"col-sm-3\", \"col-form-label\"], [\"type\", \"text\", \"id\", \"name\", \"placeholder\", \"Name\", 1, \"form-control\"], [\"for\", \"email\", 1, \"col-sm-3\", \"col-form-label\"], [\"type\", \"email\", \"id\", \"email\", \"placeholder\", \"Email\", 1, \"form-control\"], [\"for\", \"phone\", 1, \"col-sm-3\", \"col-form-label\"], [\"type\", \"tel\", \"id\", \"phone\", \"placeholder\", \"Phone\", 1, \"form-control\"], [1, \"modal-footer\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\"]],\n  template: function ClientFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h4\", 1);\n      i0.ɵɵtext(2, \"Create new client\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(3, \"div\", 2)(4, \"form\")(5, \"div\", 3)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Shared Key\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 5);\n      i0.ɵɵelement(9, \"input\", 6);\n      i0.ɵɵelementStart(10, \"div\", 7);\n      i0.ɵɵtext(11, \"Shared Key is required\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(12, \"div\", 3)(13, \"label\", 8);\n      i0.ɵɵtext(14, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(15, \"div\", 5);\n      i0.ɵɵelement(16, \"input\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(17, \"div\", 3)(18, \"label\", 10);\n      i0.ɵɵtext(19, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 5);\n      i0.ɵɵelement(21, \"input\", 11);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(22, \"div\", 3)(23, \"label\", 12);\n      i0.ɵɵtext(24, \"Phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"div\", 5);\n      i0.ɵɵelement(26, \"input\", 13);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(27, \"div\", 14)(28, \"button\", 15);\n      i0.ɵɵtext(29, \"OK\");\n      i0.ɵɵelementEnd()();\n    }\n  },\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Client","ClientFormComponent","constructor","modal","clientService","router","client","saveClient","create","subscribe","cliente","navigate","swal","nombre","err","errores","error","errors","console","status","close","i0","ɵɵdirectiveInject","i1","NgbActiveModal","i2","ClientService","i3","Router","selectors","inputs","decls","vars","consts","template","ClientFormComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement"],"sources":["C:\\Users\\adminDiana\\Documents\\proyectos\\DemoGML\\client-app\\src\\app\\client-form\\client-form.component.ts","C:\\Users\\adminDiana\\Documents\\proyectos\\DemoGML\\client-app\\src\\app\\client-form\\client-form.component.html"],"sourcesContent":["import { Component, Input } from '@angular/core';\nimport { NgbActiveModal } from '@ng-bootstrap/ng-bootstrap';\nimport { Client } from '../client-main/client';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ClientService } from '../client-main/client.service';\n\n@Component({\n  selector: 'app-client-form',\n  templateUrl: './client-form.component.html',\n  styleUrls: ['./client-form.component.css']\n})\nexport class ClientFormComponent {\n\n  @Input()\n  client: Client = new Client;\n\n  constructor(public modal: NgbActiveModal, \n    private clientService: ClientService,\n    private router: Router) { }\n\n  saveClient() {\n    \n    this.clientService.create(this.client)\n      .subscribe(\n        cliente => {\n          this.router.navigate(['/clientes']);\n          swal('Nuevo cliente', `El cliente ${cliente.nombre} ha sido creado con éxito`, 'success');\n        },\n        err => {\n          this.errores = err.error.errors as string[];\n          console.error('Código del error desde el backend: ' + err.status);\n          console.error(err.error.errors);\n        }\n      );  \n\n    // Si todo está correcto, puedes cerrar el modal y enviar los datos al backend\n    this.modal.close(/* datos del nuevo cliente */);\n  }\n}\n","<div class=\"modal-header\">\n    <h4 class=\"modal-title\">Create new client</h4>\n</div>\n<div class=\"modal-body\">\n    <form>\n        <div class=\"form-group row\">\n            <label for=\"sharedKey\" class=\"col-sm-3 col-form-label\">Shared Key</label>\n            <div class=\"col-sm-9\">\n                <input type=\"text\" class=\"form-control\" id=\"sharedKey\" placeholder=\"Shared Key\">\n                <div class=\"invalid-feedback\">Shared Key is required</div>\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <label for=\"name\" class=\"col-sm-3 col-form-label\">Name</label>\n            <div class=\"col-sm-9\">\n                <input type=\"text\" class=\"form-control\" id=\"name\" placeholder=\"Name\">\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <label for=\"email\" class=\"col-sm-3 col-form-label\">Email</label>\n            <div class=\"col-sm-9\">\n                <input type=\"email\" class=\"form-control\" id=\"email\" placeholder=\"Email\">\n            </div>\n        </div>\n        <div class=\"form-group row\">\n            <label for=\"phone\" class=\"col-sm-3 col-form-label\">Phone</label>\n            <div class=\"col-sm-9\">\n                <input type=\"tel\" class=\"form-control\" id=\"phone\" placeholder=\"Phone\">\n            </div>\n        </div>\n    </form>\n</div>\n<div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-primary\">OK</button>\n</div>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}